@model Orchard.Product.Models.ProductPart
@{
    var shellDescriptor = WorkContext.Resolve<Orchard.Environment.Descriptor.Models.ShellDescriptor>();
    Script.Require("OrchardTinyMce");
}


<script type="text/javascript">
var mediaPickerEnabled = @(shellDescriptor.Features.Any(x => x.Name == "Orchard.MediaPicker") ? "true" : "false");
var mediaLibraryEnabled = @(shellDescriptor.Features.Any(x => x.Name == "Orchard.MediaLibrary") ? "true" : "false");
var language= @(shellDescriptor.Features.Any(x => x.Name == "Orchard.Location") ? "true" : "false");
</script>
<script type="text/javascript">
  tinymce.init({
      selector: '.tinymce',
    inline: true
  });
</script>
<fieldset>
    <div class="editor-label">
        @Html.LabelFor(model => model.PName, T(Html.DisplayNameFor(model => model.PName).ToHtmlString()))
    </div>
    <div class="editor-field">
        @Html.TextBoxFor(model => model.PName)
        @Html.ValidationMessageFor(model => model.PName)
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.AbbrePName, T(Html.DisplayNameFor(model => model.AbbrePName).ToHtmlString()))
    </div>
    <div class="editor-field">
        @Html.TextBoxFor(model => model.AbbrePName)
        @Html.ValidationMessageFor(model => model.AbbrePName)
    </div>
    <div class="editor-label">
        @Html.LabelFor(model=>model.SortID,T(Html.DisplayNameFor(model=>model.SortID).ToHtmlString()))
    </div>
    <div class="editor-field">
        @Html.TextBoxFor(model=>model.SortID)
        @Html.ValidationMessageFor(model=>model.SortID)
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.Feature, T(Html.DisplayNameFor(model => model.Feature).ToHtmlString()))
    </div>
    <div class="editor-field">
        @{
            var htmlAttributes = new Dictionary<string, object>();
            htmlAttributes["class"] = "html tinymce";
            htmlAttributes["required"] = "required";
            htmlAttributes["autofocus"] = "autofocus";
            htmlAttributes["placeholder"] = "";
            htmlAttributes["mediaPickerEnabled"] = true;
        }
        
        @Html.TextArea("Feature", (string)Model.Feature, 25, 80, htmlAttributes)
        @Html.ValidationMessageFor(model => model.Feature)
    </div>
  
</fieldset>
